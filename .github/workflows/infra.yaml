name: Create Infra Cloud

on:
  workflow_dispatch:    
    inputs: 
      action:
        description: 'Terraform Implements Infra'
        type: choice
        options:
          - Apply
          - Destroy
      environment:
        description: 'Environment to Deploy'
        type: environment
        required: true
      lockState:
        description: 'Lock State' # ou outras opções de CLI
        type: choice
        default: ""
        options:
          - " "      
          - -lock=false
          - -lock=true
  push:
    branches:
      - dev
      - feature*
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**    

env:
  TF_LOG: INFO
  TF_CLI_ARGS_plan: ${{ github.event.inputs.lockState }}     

jobs:
  Terraform_Apply_Infra:
    runs-on: ubuntu-latest
    name: Terraform Aplly
    environment: ${{ github.event.inputs.environment }}  
    if: | 
      github.event.inputs.action == 'Apply' &&
      (github.event.inputs.environment)
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials 2
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}        

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
          
      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform plan
        id: plan
        run: terraform plan ${{ env.TF_CLI_PLAN }}
        env:
          TF_CLI_PLAN: ${{ env.TF_CLI_ARGS_plan }}

      - name: Terraform Apply
        id: apply
        run: terraform apply ${{ env.TF_CLI_PLAN }} -auto-approve
        env:
          TF_CLI_PLAN: ${{ env.TF_CLI_ARGS_plan }}


  Terraform_Destroy:
    name: "Terraform Destroy"
    environment: ${{ github.event.inputs.environment }}
    if: |
      github.event.inputs.action == 'Destroy' &&
      (github.event.inputs.environment)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials 2
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}     

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Destroy
        id: destroy
        run: terraform destroy ${{ env.TF_CLI_PLAN }} -auto-approve
        env:
          TF_CLI_PLAN: ${{ env.TF_CLI_ARGS_plan }}
