name: Build Application

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - release/**
      - feature/**
  pull_request:
    branches:
      - main  

env:
  AWS_CLUSTER_NAME: cluester-eks      

jobs:
  CI_CD:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          repository: wkrzywiec/kanban-board
          ref: master

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6

      - name: Configure AWS Credentials 2
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }} 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Frontend, Push to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: frontend
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
        working-directory: ./kanban-ui
        shell: bash
        run: |
          aws ecr create-repository --region ${{ secrets.AWS_REGION }} --repository-name ${{ env.REPOSITORY }} --debug || true
          echo "Build And Push Image"
          docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Build Backend, Push to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
        working-directory: ./kanban-app
        shell: bash
        run: |
          aws ecr create-repository --region ${{ secrets.AWS_REGION }} --repository-name ${{ env.REPOSITORY }} --debug || true          
          echo "Build And Push Image"
          docker build -t ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
  
  Deploy:
    needs: CI_CD
    runs-on: ubuntu-latest
    name: Deploy Helm
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: benjlevesque/short-sha@v2.2
        id: short-sha
        with:
          length: 6        

      - name: Configure AWS Credentials 2
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
      
      - name: Get KubeConfig
        shell: bash
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name ${{ env.AWS_CLUSTER_NAME }}
                
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Add CLI
        shell: bash
        run: |
          apt install awscli -y

      - name: 'Deploy Front'
        uses: deliverybot/helm@v1.5.0
        with:
          release: './frontend'
          namespace: 'demo'
          chart: 'frontend'
          value-files: >-
            [
              "./frontend/values.yaml"
            ]
          token: '${{ github.token }}'
        env:
          KUBECONFIG_FILE: "~/.kube/config"
          REPOSITORY: frontend
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
                         
      - name: 'Deploy Back'
        uses: deliverybot/helm@v1.5.0
        with:
          release: './backend'
          namespace: 'demo'
          chart: 'backend'
          value-files: >-
            [
              "./backend/values.yaml"
            ]
          token: '${{ github.token }}'
        env:
          KUBECONFIG_FILE: "~/.kube/config"
          REPOSITORY: backend
          IMAGE_TAG: ${{ steps.short-sha.outputs.sha }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}

